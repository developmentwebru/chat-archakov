[{"D:\\node\\archakov\\chat\\src\\index.js":"1","D:\\node\\archakov\\chat\\src\\App.js":"2","D:\\node\\archakov\\chat\\src\\components\\index.js":"3","D:\\node\\archakov\\chat\\src\\components\\Button\\index.js":"4","D:\\node\\archakov\\chat\\src\\components\\Block\\index.js":"5","D:\\node\\archakov\\chat\\src\\pages\\Auth\\index.jsx":"6","D:\\node\\archakov\\chat\\src\\modules\\index.js":"7","D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\containers\\LoginForm.js":"8","D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\components\\LoginForm.jsx":"9","D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\index.js":"10","D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\components\\RegisterForm.jsx":"11","D:\\node\\archakov\\chat\\src\\pages\\index.js":"12","D:\\node\\archakov\\chat\\src\\pages\\Home\\index.jsx":"13","D:\\node\\archakov\\chat\\src\\components\\Message\\index.js":"14","D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\containers\\RegisterForm.js":"15","D:\\node\\archakov\\chat\\src\\utils\\validate.js":"16","D:\\node\\archakov\\chat\\src\\utils\\helpers\\index.js":"17","D:\\node\\archakov\\chat\\src\\utils\\helpers\\validateField.js":"18","D:\\node\\archakov\\chat\\src\\components\\Time\\index.js":"19","D:\\node\\archakov\\chat\\src\\components\\IconReaded\\index.js":"20","D:\\node\\archakov\\chat\\src\\utils\\helpers\\convertCurrentTime.js":"21","D:\\node\\archakov\\chat\\src\\utils\\helpers\\generateAvatarFromHash.js":"22","D:\\node\\archakov\\chat\\src\\components\\Dialogs\\index.js":"23","D:\\node\\archakov\\chat\\src\\components\\Avatar\\index.js":"24","D:\\node\\archakov\\chat\\src\\components\\Status\\index.js":"25","D:\\node\\archakov\\chat\\src\\components\\ChatInput\\index.js":"26","D:\\node\\archakov\\chat\\src\\components\\Messages\\index.js":"27","D:\\node\\archakov\\chat\\src\\containers\\Dialogs.js":"28","D:\\node\\archakov\\chat\\src\\containers\\index.js":"29","D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\index.js":"30","D:\\node\\archakov\\chat\\src\\redux\\store.js":"31","D:\\node\\archakov\\chat\\src\\redux\\reducers\\index.js":"32","D:\\node\\archakov\\chat\\src\\redux\\reducers\\dialogs.js":"33","D:\\node\\archakov\\chat\\src\\redux\\actions\\index.js":"34","D:\\node\\archakov\\chat\\src\\redux\\actions\\dialogs.js":"35","D:\\node\\archakov\\chat\\src\\utils\\api\\index.js":"36","D:\\node\\archakov\\chat\\src\\utils\\api\\dialogs.js":"37","D:\\node\\archakov\\chat\\src\\core\\index.js":"38","D:\\node\\archakov\\chat\\src\\core\\axios.js":"39","D:\\node\\archakov\\chat\\src\\containers\\Messages.js":"40","D:\\node\\archakov\\chat\\src\\redux\\reducers\\messages.js":"41","D:\\node\\archakov\\chat\\src\\utils\\api\\messages.js":"42","D:\\node\\archakov\\chat\\src\\redux\\actions\\messages.js":"43","D:\\node\\archakov\\chat\\src\\utils\\helpers\\openNotification.js":"44","D:\\node\\archakov\\chat\\src\\redux\\reducers\\user.js":"45","D:\\node\\archakov\\chat\\src\\redux\\actions\\user.js":"46","D:\\node\\archakov\\chat\\src\\utils\\api\\user.js":"47","D:\\node\\archakov\\chat\\src\\components\\FormField\\index.js":"48","D:\\node\\archakov\\chat\\src\\pages\\Auth\\components\\CheckEmailInfo.jsx":"49","D:\\node\\archakov\\chat\\src\\components\\DialogItem\\index.jsx":"50"},{"size":538,"mtime":1612810463915,"results":"51","hashOfConfig":"52"},{"size":728,"mtime":1612818118002,"results":"53","hashOfConfig":"52"},{"size":618,"mtime":1612777057696,"results":"54","hashOfConfig":"52"},{"size":448,"mtime":1611434277444,"results":"55","hashOfConfig":"52"},{"size":282,"mtime":1611434983651,"results":"56","hashOfConfig":"52"},{"size":584,"mtime":1612818596890,"results":"57","hashOfConfig":"52"},{"size":108,"mtime":1612018251467,"results":"58","hashOfConfig":"52"},{"size":1142,"mtime":1612820131125,"results":"59","hashOfConfig":"52"},{"size":3389,"mtime":1612777221837,"results":"60","hashOfConfig":"52"},{"size":76,"mtime":1611476440623,"results":"61","hashOfConfig":"52"},{"size":3807,"mtime":1612777367626,"results":"62","hashOfConfig":"52"},{"size":78,"mtime":1611579282862,"results":"63","hashOfConfig":"52"},{"size":1952,"mtime":1612117803572,"results":"64","hashOfConfig":"52"},{"size":5369,"mtime":1612099915642,"results":"65","hashOfConfig":"52"},{"size":1135,"mtime":1612818469107,"results":"66","hashOfConfig":"52"},{"size":1240,"mtime":1612777780821,"results":"67","hashOfConfig":"52"},{"size":264,"mtime":1612687554895,"results":"68","hashOfConfig":"52"},{"size":280,"mtime":1612016634688,"results":"69","hashOfConfig":"52"},{"size":416,"mtime":1611847225903,"results":"70","hashOfConfig":"52"},{"size":729,"mtime":1611847225899,"results":"71","hashOfConfig":"52"},{"size":204,"mtime":1611847225911,"results":"72","hashOfConfig":"52"},{"size":681,"mtime":1611863100499,"results":"73","hashOfConfig":"52"},{"size":1292,"mtime":1612699197136,"results":"74","hashOfConfig":"52"},{"size":943,"mtime":1611913801355,"results":"75","hashOfConfig":"52"},{"size":384,"mtime":1611867915075,"results":"76","hashOfConfig":"52"},{"size":2478,"mtime":1612776994319,"results":"77","hashOfConfig":"52"},{"size":991,"mtime":1612102261421,"results":"78","hashOfConfig":"52"},{"size":1249,"mtime":1612699471707,"results":"79","hashOfConfig":"52"},{"size":94,"mtime":1612186972820,"results":"80","hashOfConfig":"52"},{"size":85,"mtime":1612018136412,"results":"81","hashOfConfig":"52"},{"size":367,"mtime":1612082839741,"results":"82","hashOfConfig":"52"},{"size":266,"mtime":1612688806468,"results":"83","hashOfConfig":"52"},{"size":522,"mtime":1612095592400,"results":"84","hashOfConfig":"52"},{"size":158,"mtime":1612691524046,"results":"85","hashOfConfig":"52"},{"size":467,"mtime":1612810142494,"results":"86","hashOfConfig":"52"},{"size":143,"mtime":1612692546577,"results":"87","hashOfConfig":"52"},{"size":99,"mtime":1612078522975,"results":"88","hashOfConfig":"52"},{"size":40,"mtime":1612078061892,"results":"89","hashOfConfig":"52"},{"size":253,"mtime":1612818916192,"results":"90","hashOfConfig":"52"},{"size":923,"mtime":1612101979067,"results":"91","hashOfConfig":"52"},{"size":526,"mtime":1612095841618,"results":"92","hashOfConfig":"52"},{"size":123,"mtime":1612092091343,"results":"93","hashOfConfig":"52"},{"size":619,"mtime":1612810142409,"results":"94","hashOfConfig":"52"},{"size":303,"mtime":1612688384177,"results":"95","hashOfConfig":"52"},{"size":612,"mtime":1612698201837,"results":"96","hashOfConfig":"52"},{"size":1976,"mtime":1612820220923,"results":"97","hashOfConfig":"52"},{"size":292,"mtime":1612818750128,"results":"98","hashOfConfig":"52"},{"size":1024,"mtime":1612767348686,"results":"99","hashOfConfig":"52"},{"size":1996,"mtime":1612777479339,"results":"100","hashOfConfig":"52"},{"size":1824,"mtime":1612109333050,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1lvnjau",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"D:\\node\\archakov\\chat\\src\\index.js",[],["215","216"],"D:\\node\\archakov\\chat\\src\\App.js",[],"D:\\node\\archakov\\chat\\src\\components\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\Button\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\Block\\index.js",[],"D:\\node\\archakov\\chat\\src\\pages\\Auth\\index.jsx",[],"D:\\node\\archakov\\chat\\src\\modules\\index.js",[],"D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\containers\\LoginForm.js",[],"D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\components\\LoginForm.jsx",[],"D:\\node\\archakov\\chat\\src\\modules\\LoginForm\\index.js",[],"D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\components\\RegisterForm.jsx",["217"],"import React from 'react';\r\nimport {Form} from \"antd\";\r\nimport {Block, Button, FormField} from \"../../../components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { UserOutlined, LockOutlined, MailOutlined, InfoCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting\r\n    } = props;\r\n    const success = false;\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n\r\n        <div className=\"auth__top\">\r\n            <h2>\r\n                Регистрация\r\n            </h2>\r\n            <p>\r\n                Для входа в чат, вам нужно зарегистрироваться\r\n            </p>\r\n\r\n            <Block>\r\n                {!success ? (\r\n\r\n                    <Form\r\n                    onSubmit={handleSubmit}\r\n\r\n                    className=\"login-form\"\r\n                   /* initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                   onFinish={onFinish}*/\r\n                >\r\n                        <FormField touched={touched} errors={errors}\r\n                                   name='email' icon={<MailOutlined  className=\"site-form-item-icon\" />} handleBlur={handleBlur}\r\n                                   handleChange={handleChange} values={values} placeholder='E-mail'\r\n                        />\r\n                        <FormField touched={touched} errors={errors}\r\n                                   name='fullname' icon={<UserOutlined  className=\"site-form-item-icon\" />} handleBlur={handleBlur}\r\n                                   handleChange={handleChange} values={values} placeholder='Ваше имя'\r\n                        />\r\n                        <FormField touched={touched} errors={errors}\r\n                                   name='password' icon={<LockOutlined  className=\"site-form-item-icon\" />} handleBlur={handleBlur}\r\n                                   handleChange={handleChange} values={values} placeholder='Введите пароль'\r\n                                   type=\"password\"\r\n                        />\r\n                        <FormField touched={touched} errors={errors}\r\n                                   name='password2' icon={<LockOutlined  className=\"site-form-item-icon\" />} handleBlur={handleBlur}\r\n                                   handleChange={handleChange} values={values} placeholder='Повторите пароль'\r\n                                   type=\"password\"\r\n                        />\r\n\r\n                    <Form.Item>\r\n                        <Button\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            disabled={isSubmitting}\r\n                            size='large'>\r\n                            Зарегистрироваться\r\n                        </Button>\r\n\r\n                    </Form.Item>\r\n\r\n                    <Link to='/signin' className='auth__register-link' href=\"#\">Войти в аккаунт</Link>\r\n\r\n                </Form> ): (<div className='auth__success-block'>\r\n                             <InfoCircleTwoTone style={{ fontSize: '50px' }} />\r\n                            <h3>Подтвердите свой аккаунт</h3>\r\n                            <p>На Вашу почту отправлено письмо с ссылкой на подтверждение аккаунта</p>\r\n                        </div>)}\r\n            </Block>\r\n\r\n\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterForm;",["218","219"],"D:\\node\\archakov\\chat\\src\\pages\\index.js",[],"D:\\node\\archakov\\chat\\src\\pages\\Home\\index.jsx",[],"D:\\node\\archakov\\chat\\src\\components\\Message\\index.js",[],"D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\containers\\RegisterForm.js",[],"D:\\node\\archakov\\chat\\src\\utils\\validate.js",[],"D:\\node\\archakov\\chat\\src\\utils\\helpers\\index.js",[],"D:\\node\\archakov\\chat\\src\\utils\\helpers\\validateField.js",[],"D:\\node\\archakov\\chat\\src\\components\\Time\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\IconReaded\\index.js",[],"D:\\node\\archakov\\chat\\src\\utils\\helpers\\convertCurrentTime.js",[],"D:\\node\\archakov\\chat\\src\\utils\\helpers\\generateAvatarFromHash.js",[],"D:\\node\\archakov\\chat\\src\\components\\Dialogs\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\Avatar\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\Status\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\ChatInput\\index.js",[],"D:\\node\\archakov\\chat\\src\\components\\Messages\\index.js",[],"D:\\node\\archakov\\chat\\src\\containers\\Dialogs.js",["220","221"],"import React, { useState, useEffect } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { Dialogs as BaseDialogs } from \"../components\";\r\nimport {dialogsActions} from \"../redux/actions\";\r\n\r\nconst Dialogs = ({fetchDialogs, setCurrentDialogId, currentDialogId, items, userId }) => {\r\n    const [inputValue, setValue] = useState(\"\");\r\n    const [filtred, setFiltredItems] = useState(Array.from(items));\r\n\r\n    const onChangeInput = value => {\r\n        setFiltredItems(\r\n            items.filter(\r\n                dialog =>\r\n                    dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n            )\r\n        );\r\n        setValue(value);\r\n    };\r\n\r\n    const onSelectDialog = () => {\r\n\r\n    };\r\n\r\n   /* useEffect(() =>{\r\n    if (!items.length) {\r\n        fetchDialogs();\r\n    }else {\r\n        setFiltredItems(items);\r\n    }\r\n\r\n    }, [items]);*/\r\n\r\n    return (\r\n        <BaseDialogs\r\n            userId={userId}\r\n            items={filtred}\r\n            onSearch={onChangeInput}\r\n            inputValue={inputValue}\r\n            onSelectDialog={setCurrentDialogId}\r\n            currentDialogId={currentDialogId}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(({ dialogs}) => dialogs, dialogsActions)(Dialogs);\r\n","D:\\node\\archakov\\chat\\src\\containers\\index.js",[],"D:\\node\\archakov\\chat\\src\\modules\\RegisterForm\\index.js",[],"D:\\node\\archakov\\chat\\src\\redux\\store.js",[],"D:\\node\\archakov\\chat\\src\\redux\\reducers\\index.js",[],"D:\\node\\archakov\\chat\\src\\redux\\reducers\\dialogs.js",["222"],"\r\nconst initialState = {\r\n    items: [],\r\n    currentDialogId: null,\r\n    isLoading: false\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'DIALOGS:SET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: payload\r\n            };\r\n        case 'DIALOGS:SET_CURRENT_DIALOG_ID':\r\n            return {\r\n                ...state,\r\n                currentDialogId: payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","D:\\node\\archakov\\chat\\src\\redux\\actions\\index.js",[],"D:\\node\\archakov\\chat\\src\\redux\\actions\\dialogs.js",[],"D:\\node\\archakov\\chat\\src\\utils\\api\\index.js",[],"D:\\node\\archakov\\chat\\src\\utils\\api\\dialogs.js",["223"],"import {axios} from '../../core';\r\n\r\nexport default {\r\n    getAll : () => axios.get('/dialogs')\r\n};","D:\\node\\archakov\\chat\\src\\core\\index.js",[],"D:\\node\\archakov\\chat\\src\\core\\axios.js",[],"D:\\node\\archakov\\chat\\src\\containers\\Messages.js",["224"],"import React, { useEffect, useRef } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { Messages as BaseMessages } from \"../components\";\r\nimport {messagesActions} from \"../redux/actions\";\r\n\r\n\r\n\r\nconst Dialogs = ({ currentDialogId, fetchMessages, items, isLoading }) => {\r\n    const messagesRef = useRef(null);\r\n\r\n    useEffect(() =>{\r\n        if (currentDialogId){\r\n        fetchMessages(currentDialogId)}\r\n    }, [currentDialogId]);\r\n\r\n    useEffect(() =>{\r\n\r\n            messagesRef.current.scrollTo(0, 999999);\r\n\r\n\r\n    });\r\n\r\n    return (\r\n        <BaseMessages\r\n            blockref={messagesRef}\r\n            items={items}\r\n            isLoading={isLoading}\r\n        />\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    ({ dialogs, messages}) => ({\r\n        currentDialogId: dialogs.currentDialogId,\r\n        items: messages.items,\r\n        isLoading: messages.isLoading\r\n    }),\r\n    messagesActions\r\n)(Dialogs);\r\n","D:\\node\\archakov\\chat\\src\\redux\\reducers\\messages.js",["225"],"\r\nconst initialState = {\r\n    items: null,\r\n    isLoading: false\r\n\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'MESSAGES:SET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n                isLoading: false\r\n            };\r\n            case 'MESSAGES:SET_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","D:\\node\\archakov\\chat\\src\\utils\\api\\messages.js",["226"],"import {axios} from '../../core';\r\n\r\nexport default {\r\n    getAllByDialogId : id => axios.get('/messages?dialog=' + id)\r\n};","D:\\node\\archakov\\chat\\src\\redux\\actions\\messages.js",[],"D:\\node\\archakov\\chat\\src\\utils\\helpers\\openNotification.js",["227"],"import {notification} from 'antd';\r\n\r\nexport default ({text, type = 'info', title, duration =3}) => notification[type]({\r\n        message: title,\r\n        description: text,\r\n    duration: duration\r\n/*\r\n        onClick: () => {\r\n            console.log('Notification Clicked!');\r\n        },*/\r\n    });\r\n","D:\\node\\archakov\\chat\\src\\redux\\reducers\\user.js",["228"],"\r\nconst initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: !!window.localStorage.token\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'USER:SET_DATA':\r\n            return {\r\n                ...state,\r\n                data: payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            };\r\n            case 'USER:SET_IS_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","D:\\node\\archakov\\chat\\src\\redux\\actions\\user.js",[],"D:\\node\\archakov\\chat\\src\\utils\\api\\user.js",["229"],"import {axios} from '../../core';\r\n\r\n\r\n\r\nexport default {\r\n    signIn: postData => axios.post(\"/user/signin\", postData),\r\n    signUp: postData => axios.post(\"/user/signup\", postData),\r\n    verifyHash: hash => axios.get(\"/user/verify?hash=\" + hash),\r\n    getMe: () => axios.get(\"/user/me\")\r\n};","D:\\node\\archakov\\chat\\src\\components\\FormField\\index.js",[],"D:\\node\\archakov\\chat\\src\\pages\\Auth\\components\\CheckEmailInfo.jsx",["230"],"import React, {useEffect, useState} from 'react';\r\nimport { Result, Button} from \"antd\";\r\nimport Block from \"../../../components/Block\";\r\nimport {userApi} from '../../../utils/api'\r\n\r\nconst renderTextInfo = (hash, verified) => {\r\n    if (hash) {\r\n        if (verified) {\r\n            return {\r\n                status: \"success\",\r\n                message: \"Аккаунт успешно подтвержден!\"\r\n            };\r\n        } else {\r\n            return {\r\n                status: \"error\",\r\n                message: \"Ошибка при подтверждении аккаунта!\"\r\n            };\r\n        }\r\n    } else {\r\n        return {\r\n            status: \"success\",\r\n            message: \"Ссылка с подтверждением аккаунта отправлена на E-Mail.\"\r\n        };\r\n    }\r\n};\r\n\r\nconst CheckEmailInfo = ({ location, history }) => {\r\n    const [verified, setVerified] = useState(false);\r\n    const hash = location.search.split(\"hash=\")[1];\r\n    const info = renderTextInfo(hash, verified);\r\n\r\n    useEffect(() => {\r\n        if (hash) {\r\n            userApi.verifyHash(hash).then(({ data }) => {\r\n                if (data.status === \"success\") {\r\n                    setVerified(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Block>\r\n                <Result\r\n                    status={info.status}\r\n                    title={info.status === \"success\" ? \"Готово!\" : \"Ошибка\"}\r\n                    subTitle={info.message}\r\n                    extra={\r\n                        info.status === \"success\" &&\r\n                        verified && (\r\n                            <Button type=\"primary\" onClick={() => history.push(\"/signin\")}>\r\n                                Войти\r\n                            </Button>\r\n                        )\r\n                    }\r\n                />\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckEmailInfo;","D:\\node\\archakov\\chat\\src\\components\\DialogItem\\index.jsx",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":19,"column":11,"nodeType":"237","messageId":"238","endLine":19,"endColumn":19},{"ruleId":"231","replacedBy":"239"},{"ruleId":"233","replacedBy":"240"},{"ruleId":"235","severity":1,"message":"241","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"242","line":20,"column":11,"nodeType":"237","messageId":"238","endLine":20,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":8,"column":1,"nodeType":"245","endLine":23,"endColumn":2},{"ruleId":"243","severity":1,"message":"246","line":3,"column":1,"nodeType":"245","endLine":5,"endColumn":3},{"ruleId":"247","severity":1,"message":"248","line":14,"column":8,"nodeType":"249","endLine":14,"endColumn":25,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"244","line":8,"column":1,"nodeType":"245","endLine":24,"endColumn":2},{"ruleId":"243","severity":1,"message":"246","line":3,"column":1,"nodeType":"245","endLine":5,"endColumn":3},{"ruleId":"243","severity":1,"message":"244","line":3,"column":1,"nodeType":"245","endLine":11,"endColumn":8},{"ruleId":"243","severity":1,"message":"244","line":8,"column":1,"nodeType":"245","endLine":25,"endColumn":2},{"ruleId":"243","severity":1,"message":"246","line":5,"column":1,"nodeType":"245","endLine":10,"endColumn":3},{"ruleId":"235","severity":1,"message":"251","line":2,"column":18,"nodeType":"237","messageId":"238","endLine":2,"endColumn":24},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'onFinish' is assigned a value but never used.","Identifier","unusedVar",["252"],["253"],"'useEffect' is defined but never used.","'onSelectDialog' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array. If 'fetchMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["254"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},"Update the dependencies array to be: [currentDialogId, fetchMessages]",{"range":"257","text":"258"},[423,440],"[currentDialogId, fetchMessages]"]